diff --git a/node_modules/@parcel/utils/lib/index.js b/node_modules/@parcel/utils/lib/index.js
index 7955f35..ee2daae 100644
--- a/node_modules/@parcel/utils/lib/index.js
+++ b/node_modules/@parcel/utils/lib/index.js
@@ -36448,10 +36448,12 @@ function $bc66accb63b05e9a$export$a22ef0cbdf8abc95({ dependency: dependency , fr
     var _dependency_meta;
     let to;
     let orig = (0, ($parcel$interopDefault($8C1kk$url))).parse(dependency.specifier);
-    if (relative) {
+    const mainEntry = toBundle.getMainEntry();
+    if (mainEntry && mainEntry.pipeline === "function-util") {
         to = (0, ($parcel$interopDefault($8C1kk$url))).format({
             pathname: (0, $76ed5e95485fb544$export$402b5a120b1183b3)(fromBundle, toBundle, {
-                leadingDotSlash: false
+                leadingDotSlash: true,
+                relative: true
             }),
             hash: orig.hash
         }); // If the resulting path includes a colon character and doesn't start with a ./ or ../
@@ -36540,11 +36542,14 @@ function $29bb96d8a6524ff0$export$68f6769cfac79897(stream, fallback) {
 
 
 function $76ed5e95485fb544$export$402b5a120b1183b3(from, to, opts = {
-    leadingDotSlash: true
+    leadingDotSlash: true,
+    relative: false
 }) {
-    let fromPath = (0, ($parcel$interopDefault($8C1kk$path))).join(from.target.distDir, from.name);
-    let toPath = (0, ($parcel$interopDefault($8C1kk$path))).join(to.target.distDir, to.name);
-    return (0, $3dff16cfd200ff25$export$7413eea5ad243d4)((0, ($parcel$interopDefault($8C1kk$path))).dirname(fromPath), toPath, opts.leadingDotSlash);
+    if (opts.relative) {
+        let fromPath = (0, ($parcel$interopDefault($8C1kk$path))).join(from.target.distDir, from.name);
+        let toPath = (0, ($parcel$interopDefault($8C1kk$path))).join(to.target.distDir, to.name);
+        return (0, $3dff16cfd200ff25$export$7413eea5ad243d4)((0, ($parcel$interopDefault($8C1kk$path))).dirname(fromPath), toPath, opts.leadingDotSlash);
+    } else return to.target.publicUrl + to.name.replace(/\\/g, "/");
 }
 
 
